export const tutorialPosts = [
  {
    slug: "train-model-ubuntu",
    title: "Train Model di Ubuntu",
    date: "2025-04-19",
    description: "Panduan praktis untuk melatih model machine learning di Ubuntu mulai dari instalasi environment hingga eksekusi training dengan lancar.",
    paragraphs: [
      "Ubuntu adalah salah satu sistem operasi berbasis Linux yang banyak digunakan untuk pengembangan perangkat lunak, termasuk machine learning. Dalam tutorial ini, kita akan membahas langkah langkah untuk melatih model YOLOv8 di Ubuntu. YOLOv8 adalah salah satu algoritma deteksi objek yang paling gacor dan efisien saat ini.",
      "Langkah pertama adalah memastikan bahwa sistem Ubuntu Anda memiliki Python dan pip terinstal. Python adalah bahasa pemrograman yang akan kita gunakan untuk melatih model, sedangkan pip adalah alat untuk mengelola library Python. Jika belum terinstal, Anda dapat menginstalnya dengan mudah menggunakan perintah di bawah ini.",
      "Setelah Python dan pip terinstal, kita perlu membuat virtual environment. Virtual environment membantu kita mengisolasi dependency proyek agar tidak bercampur dengan sistem utama. Setelah membuat virtual environment, aktifkan dan instal library yang diperlukan seperti PyTorch dan ultralytics (library untuk YOLOv8).",
      "Langkah berikutnya adalah menyiapkan dataset. Dataset ini harus memiliki struktur yang sesuai dengan format YOLO, yaitu folder dengan file gambar dan file label dalam format TXT. Anda dapat menggunakan dataset publik atau membuat dataset sendiri dengan alat seperti LabelImg ataupun roboflow.",
      "Setelah dataset siap, kita dapat mulai melatih model YOLOv8. Proses ini melibatkan pemanggilan perintah sederhana menggunakan library ultralytics. Anda juga dapat menyesuaikan parameter seperti jumlah epoch, ukuran batch, optimizer dan lainnya untuk mendapatkan hasil yang optimal.",
    ],
    codes: [
      "#disclaimer tutorial ini merupakan lanjutan dari tutorial cara menginstal venv. \n #apabila belum dibaca sokin aja ke agungg.com/ilmu-mahal/Venv",
      "# Langkah 1: Instal Python dan pip\nsudo apt update\nsudo apt install python3 python3-pip -y\n\n# Verifikasi instalasi\npython3 --version\npip3 --version",
      "# Langkah 2: Buat dan aktifkan virtual environment\npython3 -m venv yolov8-env\nsource yolov8-env/bin/activate\n\n# Instal dependency\npip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu\npip install ultralytics",
      "# Langkah 3: Struktur dataset YOLO\n# Pastikan dataset Anda memiliki struktur seperti ini:\n# dataset/\n# ├── images/\n# │   ├── train/\n# │   ├── val/\n# ├── labels/\n# │   ├── train/\n# │   ├── val/\n\n# Contoh penggunaan LabelImg untuk anotasi:\npip install labelImg\nlabelImg",
      "# Langkah 4: Latih model YOLOv8\nfrom ultralytics import YOLO\n\n# Load model YOLOv8, kalau pc anda kentang gunakan yang v8n kalau lebih gacor bisa yang s,x,dll\nmodel = YOLO('yolov8n.pt')\n\n# Latih model pastikan sudah mengisi path pada dataset.yaml\nmodel.train(data='path/to/dataset.yaml', epochs=50, imgsz=640, batch=16)\n\n# Evaluasi model\nmetrics = model.val()\nprint(metrics)",
    ],
    languages: [
      "bash",
      "bash",
      "bash",
      "bash",
      "python",
    ],
    images: [
      "/assets/ubuntu.webp",
      "",
      "",
      "",
    ],
  },
  {
    slug: "estimasi-jarak",
    title: "Maksimalkan output model, estimasi jarak.",
    date: "2025-03-01",
    description: "lorem ipsum dolor sit amet",
    paragraphs: [
      "Lorem ipsum dolor sit amet. Et deserunt provident ut consequatur consequuntur qui omnis modi At doloribus veritatis et odit veniam ut autem velit qui blanditiis commodi! Eum cupiditate eius eum nihil maxime et voluptatem quis et aliquid ipsam est quia minima qui quasi quis. Non eveniet molestias et esse architecto ab consequuntur quia aut sunt quia et facere voluptas non galisum facilis! Aut nulla dolores non officia internos qui Quis dicta et omnis totam ea cumque debitis est recusandae sint!",
      "Qui galisum voluptas et velit dicta ut quisquam quia ut aspernatur error. Et magni natus eos consequatur ipsum aut sunt rerum quo error dicta eum minus officiis. Aut nobis corporis qui atque eaque aut sapiente inventore eos necessitatibus voluptate et autem repellat id dicta optio. Eum quos ipsum sed maxime unde qui ipsa doloremque in quod rerum non rerum quia.",
      "Et eligendi fugit sit architecto debitis vel iste dolores non asperiores aliquam est fugit velit et porro similique ut accusamus veritatis. Sit magnam necessitatibus aut ullam natus qui illum voluptates eum quia distinctio et suscipit debitis. A voluptatem minus aut ullam ratione qui consequuntur consequuntur sit soluta voluptatem qui deleniti accusantium ut modi tempore.",
      "Qui enim amet a quasi ullam ab dolor accusamus ut placeat deleniti. Ut ducimus inventore ut Quis autem ut nobis quos quo blanditiis omnis sit animi modi et velit consectetur. Qui quia neque ut quae dolorem et nihil perspiciatis ex mollitia sint a similique dolores aut optio perspiciatis. At earum officiis et officiis neque sed pariatur officiis?",
    ],
    images: [
      "/assets/grid.webp",
      "",
      "/assets/lidarlab.webp",
      "",
    ],
    codes: [
      "focal_length_pixel = 481\n\ndef hitung_jarak(tinggi_bounding_box, focal_length_pixel, tinggi_objek_nyata):\n if tinggi_bounding_box == 0: \n return float('inf')\n jarak = (tinggi_objek_nyata * focal_length_pixel) / tinggi_bounding_box\nreturn jarak / 100",
      "",
      "def hitung_jarak_euclidean(landmark1, landmark2, lebar_img):\n jarak_pix = math.sqrt((landmark1.x - landmark2.x) ** 2 + (landmark1.y - landmark2.y) ** 2) * lebar_img\n return jarak_pix",
      "",
    ],
    languages: [
      "python", 
      "",
      "python",
      " ",
    ],
  },
  {
    slug: "Venv",
    title: "Panduan Lengkap Setup venv di Python",
    date: "2025-04-19",
    description: "Cara mudah membuat dan mengelola virtual environment (venv) di Python untuk memisahkan dependensi proyek secara rapi dan efisien.",
    paragraphs: [
      "Lorem ipsum dolor sit amet. Et deserunt provident ut consequatur consequuntur qui omnis modi At doloribus veritatis et odit veniam ut autem velit qui blanditiis commodi! Eum cupiditate eius eum nihil maxime et voluptatem quis et aliquid ipsam est quia minima qui quasi quis. Non eveniet molestias et esse architecto ab consequuntur quia aut sunt quia et facere voluptas non galisum facilis! Aut nulla dolores non officia internos qui Quis dicta et omnis totam ea cumque debitis est recusandae sint!",
      "Qui galisum voluptas et velit dicta ut quisquam quia ut aspernatur error. Et magni natus eos consequatur ipsum aut sunt rerum quo error dicta eum minus officiis. Aut nobis corporis qui atque eaque aut sapiente inventore eos necessitatibus voluptate et autem repellat id dicta optio. Eum quos ipsum sed maxime unde qui ipsa doloremque in quod rerum non rerum quia.",
      "Et eligendi fugit sit architecto debitis vel iste dolores non asperiores aliquam est fugit velit et porro similique ut accusamus veritatis. Sit magnam necessitatibus aut ullam natus qui illum voluptates eum quia distinctio et suscipit debitis. A voluptatem minus aut ullam ratione qui consequuntur consequuntur sit soluta voluptatem qui deleniti accusantium ut modi tempore.",
      "Qui enim amet a quasi ullam ab dolor accusamus ut placeat deleniti. Ut ducimus inventore ut Quis autem ut nobis quos quo blanditiis omnis sit animi modi et velit consectetur. Qui quia neque ut quae dolorem et nihil perspiciatis ex mollitia sint a similique dolores aut optio perspiciatis. At earum officiis et officiis neque sed pariatur officiis?",
    ],
    images: [
      "/assets/venv.webp",
      "",
      "/assets/venv.webp",
      "",
    ],
    codes: [
      "focal_length_pixel = 481\n\ndef hitung_jarak(tinggi_bounding_box, focal_length_pixel, tinggi_objek_nyata):\n if tinggi_bounding_box == 0: \n return float('inf')\n jarak = (tinggi_objek_nyata * focal_length_pixel) / tinggi_bounding_box\nreturn jarak / 100",
      "",
      "def hitung_jarak_euclidean(landmark1, landmark2, lebar_img):\n jarak_pix = math.sqrt((landmark1.x - landmark2.x) ** 2 + (landmark1.y - landmark2.y) ** 2) * lebar_img\n return jarak_pix",
      "",
    ],
    languages: [
      "python", 
      "",
      "python",
      " ",
    ],
  },
  {
    slug: "arsitektur-lstm",
    title: "Arsitektur Dasar LSTM",
    date: "2024-11-01",
    description: "Penjelasan singkat dan padat tentang bagaimana Long Short-Term Memory (LSTM) bekerja. Cocok untuk memahami dasar-dasar arsitektur yang banyak digunakan dalam pemrosesan data berurutan.",
    paragraphs: [
      "Lorem ipsum dolor sit amet. Et deserunt provident ut consequatur consequuntur qui omnis modi At doloribus veritatis et odit veniam ut autem velit qui blanditiis commodi! Eum cupiditate eius eum nihil maxime et voluptatem quis et aliquid ipsam est quia minima qui quasi quis. Non eveniet molestias et esse architecto ab consequuntur quia aut sunt quia et facere voluptas non galisum facilis! Aut nulla dolores non officia internos qui Quis dicta et omnis totam ea cumque debitis est recusandae sint!",
      "Qui galisum voluptas et velit dicta ut quisquam quia ut aspernatur error. Et magni natus eos consequatur ipsum aut sunt rerum quo error dicta eum minus officiis. Aut nobis corporis qui atque eaque aut sapiente inventore eos necessitatibus voluptate et autem repellat id dicta optio. Eum quos ipsum sed maxime unde qui ipsa doloremque in quod rerum non rerum quia.",
      "Et eligendi fugit sit architecto debitis vel iste dolores non asperiores aliquam est fugit velit et porro similique ut accusamus veritatis. Sit magnam necessitatibus aut ullam natus qui illum voluptates eum quia distinctio et suscipit debitis. A voluptatem minus aut ullam ratione qui consequuntur consequuntur sit soluta voluptatem qui deleniti accusantium ut modi tempore.",
      "Qui enim amet a quasi ullam ab dolor accusamus ut placeat deleniti. Ut ducimus inventore ut Quis autem ut nobis quos quo blanditiis omnis sit animi modi et velit consectetur. Qui quia neque ut quae dolorem et nihil perspiciatis ex mollitia sint a similique dolores aut optio perspiciatis. At earum officiis et officiis neque sed pariatur officiis?",
    ],
    images: [
      "/assets/venv.webp",
      "",
      "/assets/venv.webp",
      "",
    ],
    codes: [
      "focal_length_pixel = 481\n\ndef hitung_jarak(tinggi_bounding_box, focal_length_pixel, tinggi_objek_nyata):\n if tinggi_bounding_box == 0: \n return float('inf')\n jarak = (tinggi_objek_nyata * focal_length_pixel) / tinggi_bounding_box\nreturn jarak / 100",
      "",
      "def hitung_jarak_euclidean(landmark1, landmark2, lebar_img):\n jarak_pix = math.sqrt((landmark1.x - landmark2.x) ** 2 + (landmark1.y - landmark2.y) ** 2) * lebar_img\n return jarak_pix",
      "",
    ],
    languages: [
      "python", 
      "",
      "python",
      " ",
    ],
  },
  {
    slug: "mobilenet-vs-yolov8",
    title: "Bedanya MobileNet dan YOLOv8",
    date: "2024-10-31",
    description: "Perbandingan singkat antara MobileNet dan YOLOv8 dua arsitektur populer di dunia computer vision, dengan tujuan, kekuatan, dan cara kerja yang berbeda.",
    paragraphs: [
      "Lorem ipsum dolor sit amet. Et deserunt provident ut consequatur consequuntur qui omnis modi At doloribus veritatis et odit veniam ut autem velit qui blanditiis commodi! Eum cupiditate eius eum nihil maxime et voluptatem quis et aliquid ipsam est quia minima qui quasi quis. Non eveniet molestias et esse architecto ab consequuntur quia aut sunt quia et facere voluptas non galisum facilis! Aut nulla dolores non officia internos qui Quis dicta et omnis totam ea cumque debitis est recusandae sint!",
      "Qui galisum voluptas et velit dicta ut quisquam quia ut aspernatur error. Et magni natus eos consequatur ipsum aut sunt rerum quo error dicta eum minus officiis. Aut nobis corporis qui atque eaque aut sapiente inventore eos necessitatibus voluptate et autem repellat id dicta optio. Eum quos ipsum sed maxime unde qui ipsa doloremque in quod rerum non rerum quia.",
      "Et eligendi fugit sit architecto debitis vel iste dolores non asperiores aliquam est fugit velit et porro similique ut accusamus veritatis. Sit magnam necessitatibus aut ullam natus qui illum voluptates eum quia distinctio et suscipit debitis. A voluptatem minus aut ullam ratione qui consequuntur consequuntur sit soluta voluptatem qui deleniti accusantium ut modi tempore.",
      "Qui enim amet a quasi ullam ab dolor accusamus ut placeat deleniti. Ut ducimus inventore ut Quis autem ut nobis quos quo blanditiis omnis sit animi modi et velit consectetur. Qui quia neque ut quae dolorem et nihil perspiciatis ex mollitia sint a similique dolores aut optio perspiciatis. At earum officiis et officiis neque sed pariatur officiis?",
    ],
    images: [
      "/assets/333.webp",
      "",
      "/assets/333.webp",
      "",
    ],
    codes: [
      "focal_length_pixel = 481\n\ndef hitung_jarak(tinggi_bounding_box, focal_length_pixel, tinggi_objek_nyata):\n if tinggi_bounding_box == 0: \n return float('inf')\n jarak = (tinggi_objek_nyata * focal_length_pixel) / tinggi_bounding_box\nreturn jarak / 100",
      "",
      "def hitung_jarak_euclidean(landmark1, landmark2, lebar_img):\n jarak_pix = math.sqrt((landmark1.x - landmark2.x) ** 2 + (landmark1.y - landmark2.y) ** 2) * lebar_img\n return jarak_pix",
      "",
    ],
    languages: [
      "python", 
      "",
      "python",
      " ",
    ],
  },
  {
    slug: "gui-roblox-script-gacor",
    title: "GUI Roblox Kunci Script yang Gacor",
    date: "2024-10-19",
    description: "Script yang bagus tidak akan berguna tanpa GUI yang bagus juga. Cara mudah buat GUI untuk script roblox dengan chatgpt.",
    paragraphs: [
      "Lorem ipsum dolor sit amet. Et deserunt provident ut consequatur consequuntur qui omnis modi At doloribus veritatis et odit veniam ut autem velit qui blanditiis commodi! Eum cupiditate eius eum nihil maxime et voluptatem quis et aliquid ipsam est quia minima qui quasi quis. Non eveniet molestias et esse architecto ab consequuntur quia aut sunt quia et facere voluptas non galisum facilis! Aut nulla dolores non officia internos qui Quis dicta et omnis totam ea cumque debitis est recusandae sint!",
      "Qui galisum voluptas et velit dicta ut quisquam quia ut aspernatur error. Et magni natus eos consequatur ipsum aut sunt rerum quo error dicta eum minus officiis. Aut nobis corporis qui atque eaque aut sapiente inventore eos necessitatibus voluptate et autem repellat id dicta optio. Eum quos ipsum sed maxime unde qui ipsa doloremque in quod rerum non rerum quia.",
      "Et eligendi fugit sit architecto debitis vel iste dolores non asperiores aliquam est fugit velit et porro similique ut accusamus veritatis. Sit magnam necessitatibus aut ullam natus qui illum voluptates eum quia distinctio et suscipit debitis. A voluptatem minus aut ullam ratione qui consequuntur consequuntur sit soluta voluptatem qui deleniti accusantium ut modi tempore.",
      "Qui enim amet a quasi ullam ab dolor accusamus ut placeat deleniti. Ut ducimus inventore ut Quis autem ut nobis quos quo blanditiis omnis sit animi modi et velit consectetur. Qui quia neque ut quae dolorem et nihil perspiciatis ex mollitia sint a similique dolores aut optio perspiciatis. At earum officiis et officiis neque sed pariatur officiis?",
    ],
    images: [
      "/assets/blox.webp",
      "",
      "/assets/blox.webp",
      "",
    ],
    codes: [
      "focal_length_pixel = 481\n\ndef hitung_jarak(tinggi_bounding_box, focal_length_pixel, tinggi_objek_nyata):\n if tinggi_bounding_box == 0: \n return float('inf')\n jarak = (tinggi_objek_nyata * focal_length_pixel) / tinggi_bounding_box\nreturn jarak / 100",
      "",
      "def hitung_jarak_euclidean(landmark1, landmark2, lebar_img):\n jarak_pix = math.sqrt((landmark1.x - landmark2.x) ** 2 + (landmark1.y - landmark2.y) ** 2) * lebar_img\n return jarak_pix",
      "",
    ],
    languages: [
      "python", 
      "",
      "python",
      " ",
    ],
  },
  {
    slug: "cara-mudah-rubik-5x5",
    title: "Cara Mudah Selesaikan Rubik 5x5",
    date: "2024-10-10",
    description: "Panduan sederhana untuk menyelesaikan Rubik 5x5 tanpa pusing.",
    paragraphs: [
      "Lorem ipsum dolor sit amet. Et deserunt provident ut consequatur consequuntur qui omnis modi At doloribus veritatis et odit veniam ut autem velit qui blanditiis commodi! Eum cupiditate eius eum nihil maxime et voluptatem quis et aliquid ipsam est quia minima qui quasi quis. Non eveniet molestias et esse architecto ab consequuntur quia aut sunt quia et facere voluptas non galisum facilis! Aut nulla dolores non officia internos qui Quis dicta et omnis totam ea cumque debitis est recusandae sint!",
      "Qui galisum voluptas et velit dicta ut quisquam quia ut aspernatur error. Et magni natus eos consequatur ipsum aut sunt rerum quo error dicta eum minus officiis. Aut nobis corporis qui atque eaque aut sapiente inventore eos necessitatibus voluptate et autem repellat id dicta optio. Eum quos ipsum sed maxime unde qui ipsa doloremque in quod rerum non rerum quia.",
      "Et eligendi fugit sit architecto debitis vel iste dolores non asperiores aliquam est fugit velit et porro similique ut accusamus veritatis. Sit magnam necessitatibus aut ullam natus qui illum voluptates eum quia distinctio et suscipit debitis. A voluptatem minus aut ullam ratione qui consequuntur consequuntur sit soluta voluptatem qui deleniti accusantium ut modi tempore.",
      "Qui enim amet a quasi ullam ab dolor accusamus ut placeat deleniti. Ut ducimus inventore ut Quis autem ut nobis quos quo blanditiis omnis sit animi modi et velit consectetur. Qui quia neque ut quae dolorem et nihil perspiciatis ex mollitia sint a similique dolores aut optio perspiciatis. At earum officiis et officiis neque sed pariatur officiis?",
    ],
    images: [
      "/assets/rubik.webp",
      "",
      "/assets/rubik.webp",
      "",
    ],
    codes: [
      "focal_length_pixel = 481\n\ndef hitung_jarak(tinggi_bounding_box, focal_length_pixel, tinggi_objek_nyata):\n if tinggi_bounding_box == 0: \n return float('inf')\n jarak = (tinggi_objek_nyata * focal_length_pixel) / tinggi_bounding_box\nreturn jarak / 100",
      "",
      "def hitung_jarak_euclidean(landmark1, landmark2, lebar_img):\n jarak_pix = math.sqrt((landmark1.x - landmark2.x) ** 2 + (landmark1.y - landmark2.y) ** 2) * lebar_img\n return jarak_pix",
      "",
    ],
    languages: [
      "python", 
      "",
      "python",
      " ",
    ],
  },
];
